FAST_IO = 1
if FAST_IO:
    import io, sys, atexit
    rr = iter(sys.stdin.read().splitlines()).next
    sys.stdout = _OUTPUT_BUFFER = io.BytesIO()

    @atexit.register
    def write():
        sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())
else:
    rr = raw_input
rri = lambda: int(rr())
rrm = lambda: map(int, rr().split())
rrmm = lambda n: [rrm() for _ in xrange(n)]

####
MOD = 10**9 + 7
YES, NO, IMP = "YES", "NO", "IMPOSSIBLE"
from collections import defaultdict as ddic


def solve(N, A):
    count = ddic(int)
    for r, row in enumerate(A):
        for c, v in enumerate(row):
            count[r - c] += v

    return max(count.values())


for tc in xrange(1, 1 + rri()):
    N = rri()
    A = rrmm(N)
    ans = solve(N, A)
    print "Case #{}: {}".format(tc, ans)